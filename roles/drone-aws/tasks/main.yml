- name: Create a security group
  ec2_group:
      name: "{{ security_group_name }}"
      description: "{{ security_group_description }}"
      region: "{{ drone_region }}"
      rules:
        - proto: tcp
          from_port: 22
          to_port: 22
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 80
          to_port: 80
          cidr_ip: 0.0.0.0/0
        - proto: tcp
          from_port: 443
          to_port: 443
          cidr_ip: 0.0.0.0/0
      rules_egress:
        - proto: all
          cidr_ip: 0.0.0.0/0

- name: launch ec2
  ec2:
    instance_type: "{{  drone_instance }}"
    key_name: "{{ drone_key }}"
    image: "{{ drone_image }}"
    region: "{{ drone_region }}"
    group: "{{ security_group_name }}"
    count: "{{ drone_count }}"
    vpc_subnet_id: "{{ drone_subnet }}"
    wait: yes
    assign_public_ip: yes
  register: ec2

- name: Add host to group
  add_host:
    name: "{{ item.public_ip }}"
    groups: "{{ drone_group }}"
  loop: "{{ ec2.instances }}"

- name: Add tag to Instance(s)
  ec2_tag:
      resource: "{{ item.id }}"
      region: "{{ drone_region }}"
      state: "present"
  with_items: "{{ ec2.instances }}"
  args:
    tags:
      Type: "{{ drone_tag }}"

- name: Wait for SSH to come up
  wait_for:
    host: "{{ item.public_ip }}"
    port: 22
    state: started
  with_items: "{{ ec2.instances }}"

- name: Print public ip
  shell: "echo drone_ip: {{ item.public_ip }} > drone_ip.yml"
  args:
    chdir: roles/setup-drone/vars/
  with_items: "{{ ec2.instances }}"
